{"ast":null,"code":"var _jsxFileName = \"/home/alex/ProjetosNodeJS/descomplica/src/App.tsx\";\nimport React, { useCallback, useEffect, useState } from 'react';\nimport api from './services/api';\nimport People from './components/People';\nimport { Container, FormContainer, Item, Img } from './styles/App';\nimport GlobalStyle from './styles/global';\nimport starWarsImg from './assets/starwars.png';\n\nconst App = () => {\n  const [person, setPerson] = useState('');\n  const [peoples, setPeoples] = useState([]);\n  const loadPeoples = useCallback(async () => {\n    const response = await api.get('people');\n    setPeoples(response.data.results);\n  }, []);\n  useEffect(() => {\n    loadPeoples();\n  }, [loadPeoples]);\n  const handleSubmit = useCallback(async event => {\n    event.preventDefault();\n    const newPeoples = peoples.filter(p => p.name !== person);\n    setPerson('');\n    setPeoples(newPeoples);\n  }, [peoples, person]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Img, {\n    src: starWarsImg,\n    alt: \"Star Wars\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Container, {\n    \"data-testid\": \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, peoples.map(people => /*#__PURE__*/React.createElement(Item, {\n    key: people.name,\n    \"data-testid\": \"item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(People, {\n    name: people.name,\n    eye_color: people.eye_color,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  })))), /*#__PURE__*/React.createElement(FormContainer, {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"select\", {\n    className: \"dropdown\",\n    value: person,\n    onChange: event => setPerson(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    disabled: true,\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }, \"Escolha um personagem\"), peoples.map(people => /*#__PURE__*/React.createElement(\"option\", {\n    key: people.name,\n    value: people.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, people.name))), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, \"Remover da Lista\")), /*#__PURE__*/React.createElement(GlobalStyle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default App;","map":{"version":3,"sources":["/home/alex/ProjetosNodeJS/descomplica/src/App.tsx"],"names":["React","useCallback","useEffect","useState","api","People","Container","FormContainer","Item","Img","GlobalStyle","starWarsImg","App","person","setPerson","peoples","setPeoples","loadPeoples","response","get","data","results","handleSubmit","event","preventDefault","newPeoples","filter","p","name","map","people","eye_color","target","value"],"mappings":"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","sourcesContent":["import React, { FormEvent, useCallback, useEffect, useState } from 'react';\n\nimport api from './services/api';\nimport People from './components/People';\nimport { Container, FormContainer, Item, Img } from './styles/App';\nimport GlobalStyle from './styles/global';\nimport starWarsImg from './assets/starwars.png';\n\ninterface Person {\n  name: string;\n  eye_color: string;\n}\n\nconst App: React.FC = () => {\n  const [person, setPerson] = useState<string>('');\n  const [peoples, setPeoples] = useState<Person[]>([]);\n\n  const loadPeoples = useCallback(async () => {\n    const response = await api.get('people');\n    setPeoples(response.data.results);\n  }, []);\n\n  useEffect(() => {\n    loadPeoples();\n  }, [loadPeoples]);\n\n  const handleSubmit = useCallback(\n    async (event: FormEvent) => {\n      event.preventDefault();\n      const newPeoples = peoples.filter(p => p.name !== person);\n      setPerson('');\n      setPeoples(newPeoples);\n    },\n    [peoples, person],\n  );\n\n  return (\n    <div>\n      <Img src={starWarsImg} alt=\"Star Wars\" />\n      <Container data-testid=\"container\">\n        {peoples.map(people => (\n          <Item key={people.name} data-testid=\"item\">\n            <People name={people.name} eye_color={people.eye_color} />\n          </Item>\n        ))}\n      </Container>\n\n      <FormContainer onSubmit={handleSubmit}>\n        <select\n          className=\"dropdown\"\n          value={person}\n          onChange={event => setPerson(event.target.value)}\n        >\n          <option disabled value=\"\">\n            Escolha um personagem\n          </option>\n          {peoples.map(people => (\n            <option key={people.name} value={people.name}>\n              {people.name}\n            </option>\n          ))}\n        </select>\n        <button type=\"submit\">Remover da Lista</button>\n      </FormContainer>\n      <GlobalStyle />\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}